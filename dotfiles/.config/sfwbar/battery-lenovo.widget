scanner {
  file("/sys/class/power_supply/BAT0/charge_full") {
    BatteryTotal = Grab(Sum)
  }
  file("/sys/class/power_supply/BAT0/charge_now") {
    BatteryChargeNow = Grab(Sum)
  }
  file("/sys/class/power_supply/BAT0/energy_now") {
    BatteryEnergyNow = Grab(Sum)
  }
  file("/sys/class/power_supply/BAT0/capacity") {
    BatteryLevel = Grab(Sum)
  }
  file("/sys/class/power_supply/BAT0/status") {
    BatteryStatus = RegEx("^(.*)$")
  }
}

module("bsdctl")

set BatteryLeft = If(BatteryChargeNow.count,BatteryChargeNow,BatteryEnergyNow)
set XBatteryLevel = If(!Ident(BSDCtl),
      BatteryLeft / BatteryTotal * 100,
      BSDCtl("hw.acpi.battery.level.life")
    )
set XBatteryDischarging = If(!Ident(BSDCtl),
      $BatteryStatus="Discharging",
      BSDCtl("hw.acpi.battery.state")="1"
    )

layout {
  label {
    style = "battery"
    interval = 60000
    value = if(XBatteryDischarging,
              Lookup(BatteryLevel,80,"",60,"",40,"",20,"",""),
              "") +
            "\n" + Str(BatteryLevel) + '%'

  }
}
