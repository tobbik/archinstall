#!/bin/bash
#
#
function send_notification() {
  local CONDITION="$1"
  local SUBJECT="$2"
  local LOCATION="$3"
  notify-send --app-name "screenShooter" \
    --expire-time 5000 --urgency low --transient \
    "Screen shot (${CONDITION})" "from ${SUBJECT} stored in ${LOCATION}"
}

function multishot() {
  # grab output names like eDP-1 or HDMI-A
  local OUTPUTS=$(wlr-randr | grep -o "^[^ ]*")
  for OUTPUT in ${OUTPUTS}; do
    shot ${OUTPUT} "$1" "$2"
  done
}

function shot() {
  local OUTPUT=$1
  local PFX="/tmp/screen-"
  if [ x"$2" != x"" ]; then
    PFX="$2"
  fi
  if [ x"$3" == x"" ]; then
    grim -o ${OUTPUT} "${PFX}${OUTPUT}.png"
    send_notification "Full" "output <${OUTPUT}>" "${PFX}${OUTPUT}.png"
  else
    grim -o ${OUTPUT} - | gm convert - ${3} "${PFX}${OUTPUT}.png"
    send_notification "Blurred" "output <${OUTPUT}>" "${PFX}${OUTPUT}.png"
  fi
}

function usage() {
  printf "wayland-screen-shooter <select|multi|multiblur|full>\n"
  printf "  <select>     -> select a section of the screen, store in clipboard \n"
  printf "  <selectedit> -> select a section of the screen, edit in satty \n"
  printf "  <full>       -> take a full screenshot, store in clipboard\n"
  printf "  <edit>       -> take a full screenshot, edit in satty\n"
  printf "  <multi>      -> take a shot for each output, store in\n"
  printf "                  /tmp/screen-<outputname>.png\n"
  printf "  <multiblur>  -> same as <multi>, blurrs image\n"
  printf "  <blur> <OUTPUT> -> take full screenshot of output, blurrs image\n"
  printf "                  stores in/tmp/screen-<outputname>.png\n"
}

function main() {
  case "$1" in
    selectedit)
      pidof slurp || pidof satty || grim -g "$(slurp)" - | satty -f -
      ;;
    select)
      pidof slurp || ( grim -g "$(slurp)" - | wl-copy && \
        send_notification "Cropped" "selection" "clipboard" )
      ;;
    edit)
      grim - | satty -f -
      ;;
    full)
      grim - | wl-copy
      send_notification "Full" "all monitors" "clipboard"
      ;;
    multi)
      multishot "$2"
      ;;
    multiblur)
      multishot "$2" "-scale 25% -level -5%,2,60% -fill black -colorize 60% -blur 0x4 -resize 400%"
      ;;
    blur)
      shot "$2" "$3" "-scale 25% -level -5%,2,60% -fill black -colorize 60% -blur 0x4 -resize 400%"
      ;;
   *)
     usage
  esac
}

main "$@"
